[
    {
        "id": "c3708f1e",
        "text": "Hi, everybody and welcome to a new video in the Deep Learning for Radio with Python series. This time we're gonna start our projects, building a music genre classifier. Uh What we're gonna do today really is uh preparing uh it's basically like doing some preprocessing on a music data set. So what we want to do really is extract the inputs and the targets. So basically like the uh labels and the MFCC uh from music data set and store that in adjacent files. So that then we can use it when we actually train our neural network. So, first of all, what we need for a music genre classifier is a music data set. And uh luckily there's a great one on the Marias uh website where we have this uh data set for genre classification. So you can go to the website and download it here. I'm not gonna do that because I already have it. But uh",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=0s",
        "start_time": "0.0"
    },
    {
        "id": "f822c795",
        "text": "uh from music data set and store that in adjacent files. So that then we can use it when we actually train our neural network. So, first of all, what we need for a music genre classifier is a music data set. And uh luckily there's a great one on the Marias uh website where we have this uh data set for genre classification. So you can go to the website and download it here. I'm not gonna do that because I already have it. But uh don't worry, I'm just gonna leave the um a link in the description below. So you can uh have access to the data set. Cool. So let's take a look at the uh at the data set. So it's divided into like 10 different uh folders and each folder is basically a different musical genre. So we have blues, classical",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=27s",
        "start_time": "27.465"
    },
    {
        "id": "bb52abab",
        "text": "So you can go to the website and download it here. I'm not gonna do that because I already have it. But uh don't worry, I'm just gonna leave the um a link in the description below. So you can uh have access to the data set. Cool. So let's take a look at the uh at the data set. So it's divided into like 10 different uh folders and each folder is basically a different musical genre. So we have blues, classical rock, reggae, like all sorts of genres. And inside each um genre folder, we have 100 different songs, but these are not like full songs. It's just like 30 seconds worth of song. That's, I guess like, because of like copyright uh issues. So we're gonna work with this for our music genre classifier. Cool. So now let's go uh and start uh building uh like the, this preprocessor, right?",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=53s",
        "start_time": "53.659"
    },
    {
        "id": "f021fd7d",
        "text": "don't worry, I'm just gonna leave the um a link in the description below. So you can uh have access to the data set. Cool. So let's take a look at the uh at the data set. So it's divided into like 10 different uh folders and each folder is basically a different musical genre. So we have blues, classical rock, reggae, like all sorts of genres. And inside each um genre folder, we have 100 different songs, but these are not like full songs. It's just like 30 seconds worth of song. That's, I guess like, because of like copyright uh issues. So we're gonna work with this for our music genre classifier. Cool. So now let's go uh and start uh building uh like the, this preprocessor, right? OK. So what we want to do really is to define a high level function that we'll call save MFCC,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=60s",
        "start_time": "60.65"
    },
    {
        "id": "d12f377b",
        "text": "rock, reggae, like all sorts of genres. And inside each um genre folder, we have 100 different songs, but these are not like full songs. It's just like 30 seconds worth of song. That's, I guess like, because of like copyright uh issues. So we're gonna work with this for our music genre classifier. Cool. So now let's go uh and start uh building uh like the, this preprocessor, right? OK. So what we want to do really is to define a high level function that we'll call save MFCC, right? And so here we're going to have a bunch of different arguments. So first of all, we want the data set path,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=81s",
        "start_time": "81.584"
    },
    {
        "id": "2e6036f6",
        "text": "OK. So what we want to do really is to define a high level function that we'll call save MFCC, right? And so here we're going to have a bunch of different arguments. So first of all, we want the data set path, then we want the Jason Oops, not capital J Jason uh path. So data set path being obviously the, the path of the, of the data set itself. Jason path being the path of the adjacent file where we want to store like all the MF CCS and the labels, right?",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=109s",
        "start_time": "109.809"
    },
    {
        "id": "d1ffa24b",
        "text": "right? And so here we're going to have a bunch of different arguments. So first of all, we want the data set path, then we want the Jason Oops, not capital J Jason uh path. So data set path being obviously the, the path of the, of the data set itself. Jason path being the path of the adjacent file where we want to store like all the MF CCS and the labels, right? OK. So data set path, Jason path. And then we need to pass in a lot of like values which are relative like to, to uh the MFCC feature uh itself. So we're, we're gonna do a number of MF CCS",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=119s",
        "start_time": "119.699"
    },
    {
        "id": "3b7f52a7",
        "text": "then we want the Jason Oops, not capital J Jason uh path. So data set path being obviously the, the path of the, of the data set itself. Jason path being the path of the adjacent file where we want to store like all the MF CCS and the labels, right? OK. So data set path, Jason path. And then we need to pass in a lot of like values which are relative like to, to uh the MFCC feature uh itself. So we're, we're gonna do a number of MF CCS and we'll default this to 13, then we'll do a number. Uh oh yeah, let's do number FFT and this is like the interval in number of samples that we are considering for our fourier transforms. And here we'll default this to 2048 then we'll have the hop length",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=129s",
        "start_time": "129.32"
    },
    {
        "id": "be38a43c",
        "text": "OK. So data set path, Jason path. And then we need to pass in a lot of like values which are relative like to, to uh the MFCC feature uh itself. So we're, we're gonna do a number of MF CCS and we'll default this to 13, then we'll do a number. Uh oh yeah, let's do number FFT and this is like the interval in number of samples that we are considering for our fourier transforms. And here we'll default this to 2048 then we'll have the hop length and we'll default this to 512. Now, if you don't know what these things are, don't worry because I have a couple of videos where I both explain the, the theory and uh the implementation like of these things like in Libera which by the way, uh is the library audio library that we're gonna use also like today. Uh Cool.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=148s",
        "start_time": "148.1"
    },
    {
        "id": "4d226e8f",
        "text": "and we'll default this to 13, then we'll do a number. Uh oh yeah, let's do number FFT and this is like the interval in number of samples that we are considering for our fourier transforms. And here we'll default this to 2048 then we'll have the hop length and we'll default this to 512. Now, if you don't know what these things are, don't worry because I have a couple of videos where I both explain the, the theory and uh the implementation like of these things like in Libera which by the way, uh is the library audio library that we're gonna use also like today. Uh Cool. OK. So beyond this, we want also another uh argument and we can call this num number of segments. And yeah, let's default this to, to five, for example. Uh OK. So why do we need number of segments? Well, it turns out that for training deep learning models, you need a lot of data.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=164s",
        "start_time": "164.779"
    },
    {
        "id": "4d33841a",
        "text": "and we'll default this to 512. Now, if you don't know what these things are, don't worry because I have a couple of videos where I both explain the, the theory and uh the implementation like of these things like in Libera which by the way, uh is the library audio library that we're gonna use also like today. Uh Cool. OK. So beyond this, we want also another uh argument and we can call this num number of segments. And yeah, let's default this to, to five, for example. Uh OK. So why do we need number of segments? Well, it turns out that for training deep learning models, you need a lot of data. So if you consider that here, we only have 100 data points really? So it's 100 tracks per genre that isn't really much. So what we wanna do is just like chop up the each track into like a number of different segments. And then instead of like saving uh like the inputs as like tracks, saving them like as different segments, right? So that we're gonna have like many more uh like input data.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=186s",
        "start_time": "186.6"
    },
    {
        "id": "0eb4806a",
        "text": "OK. So beyond this, we want also another uh argument and we can call this num number of segments. And yeah, let's default this to, to five, for example. Uh OK. So why do we need number of segments? Well, it turns out that for training deep learning models, you need a lot of data. So if you consider that here, we only have 100 data points really? So it's 100 tracks per genre that isn't really much. So what we wanna do is just like chop up the each track into like a number of different segments. And then instead of like saving uh like the inputs as like tracks, saving them like as different segments, right? So that we're gonna have like many more uh like input data. Cool. Uh OK. So this is like the, the the high level like function. So now we need to like start uh writing uh like what we need here. So the, the first thing that we want to do is to build a dictionary, dictionary, to store uh data, right? And so we'll call this not surprisingly data.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=209s",
        "start_time": "209.649"
    },
    {
        "id": "b6371051",
        "text": "So if you consider that here, we only have 100 data points really? So it's 100 tracks per genre that isn't really much. So what we wanna do is just like chop up the each track into like a number of different segments. And then instead of like saving uh like the inputs as like tracks, saving them like as different segments, right? So that we're gonna have like many more uh like input data. Cool. Uh OK. So this is like the, the the high level like function. So now we need to like start uh writing uh like what we need here. So the, the first thing that we want to do is to build a dictionary, dictionary, to store uh data, right? And so we'll call this not surprisingly data. And uh here we're gonna have a bunch of things. So if the first one is mapping and it's gonna be an array, then we'll have, oops, sorry, this is not correct. Here we go. So mapping, then we'll have the NFC C and then we'll have the uh labels down here. So what are all of these things? Right?",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=231s",
        "start_time": "231.69"
    },
    {
        "id": "b6b29d6a",
        "text": "Cool. Uh OK. So this is like the, the the high level like function. So now we need to like start uh writing uh like what we need here. So the, the first thing that we want to do is to build a dictionary, dictionary, to store uh data, right? And so we'll call this not surprisingly data. And uh here we're gonna have a bunch of things. So if the first one is mapping and it's gonna be an array, then we'll have, oops, sorry, this is not correct. Here we go. So mapping, then we'll have the NFC C and then we'll have the uh labels down here. So what are all of these things? Right? OK. So, mappings uh we need a way of mapping uh the different uh like genres, genre labels uh onto numbers. And so we're gonna use a list for doing that. So say, for example, we have this classical",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=261s",
        "start_time": "261.98"
    },
    {
        "id": "f596c4e5",
        "text": "And uh here we're gonna have a bunch of things. So if the first one is mapping and it's gonna be an array, then we'll have, oops, sorry, this is not correct. Here we go. So mapping, then we'll have the NFC C and then we'll have the uh labels down here. So what are all of these things? Right? OK. So, mappings uh we need a way of mapping uh the different uh like genres, genre labels uh onto numbers. And so we're gonna use a list for doing that. So say, for example, we have this classical and a blue blues,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=287s",
        "start_time": "287.98"
    },
    {
        "id": "3f26a452",
        "text": "OK. So, mappings uh we need a way of mapping uh the different uh like genres, genre labels uh onto numbers. And so we're gonna use a list for doing that. So say, for example, we have this classical and a blue blues, right? So we are basically mapping classical to zero, which is the index of the list uh it belongs to and blues uh to one. Then here we're gonna have like the MF CCS. And so basically, we're gonna have the MC CMFCC vectors for each of the uh segments. And so we're gonna have say we have like three segments, for example, here. So I'm not gonna uh fill this in. But uh you get the idea right?",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=313s",
        "start_time": "313.57"
    },
    {
        "id": "ef7ac3ad",
        "text": "and a blue blues, right? So we are basically mapping classical to zero, which is the index of the list uh it belongs to and blues uh to one. Then here we're gonna have like the MF CCS. And so basically, we're gonna have the MC CMFCC vectors for each of the uh segments. And so we're gonna have say we have like three segments, for example, here. So I'm not gonna uh fill this in. But uh you get the idea right? Uh We'll see this like uh then in action and then we have the, the labels down here and the labels are gonna be, for example, 00 and one. So the MF CCS are itself the training data. So the the training inputs, the labels are the, the outputs or the, the targets that we expect. So here, basically, we're saying that's for",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=330s",
        "start_time": "330.25"
    },
    {
        "id": "b3554256",
        "text": "right? So we are basically mapping classical to zero, which is the index of the list uh it belongs to and blues uh to one. Then here we're gonna have like the MF CCS. And so basically, we're gonna have the MC CMFCC vectors for each of the uh segments. And so we're gonna have say we have like three segments, for example, here. So I'm not gonna uh fill this in. But uh you get the idea right? Uh We'll see this like uh then in action and then we have the, the labels down here and the labels are gonna be, for example, 00 and one. So the MF CCS are itself the training data. So the the training inputs, the labels are the, the outputs or the, the targets that we expect. So here, basically, we're saying that's for this MFCC uh vector here. For this segment here, we, we expect this label zero which is classical uh same thing like for like the, the, this like second segment over here, we expect zero which is classical. And here uh for the third segment over here, we expect one which is a blues, right? So, so this is like a nice way of storing uh like information that we can use for training purposes,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=333s",
        "start_time": "333.679"
    },
    {
        "id": "503ac2af",
        "text": "Uh We'll see this like uh then in action and then we have the, the labels down here and the labels are gonna be, for example, 00 and one. So the MF CCS are itself the training data. So the the training inputs, the labels are the, the outputs or the, the targets that we expect. So here, basically, we're saying that's for this MFCC uh vector here. For this segment here, we, we expect this label zero which is classical uh same thing like for like the, the, this like second segment over here, we expect zero which is classical. And here uh for the third segment over here, we expect one which is a blues, right? So, so this is like a nice way of storing uh like information that we can use for training purposes, right? But now, obviously, we don't need any of this. We just need the, the schema uh overall and we're gonna just like then fill it in while we analyze stuff. So let's go and analyze things, right? So what we wanna do, first of all is we want to look through all the uh genres, right? So basically what I'm, what I'm saying here is that if we go back here,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=363s",
        "start_time": "363.049"
    },
    {
        "id": "083a1363",
        "text": "this MFCC uh vector here. For this segment here, we, we expect this label zero which is classical uh same thing like for like the, the, this like second segment over here, we expect zero which is classical. And here uh for the third segment over here, we expect one which is a blues, right? So, so this is like a nice way of storing uh like information that we can use for training purposes, right? But now, obviously, we don't need any of this. We just need the, the schema uh overall and we're gonna just like then fill it in while we analyze stuff. So let's go and analyze things, right? So what we wanna do, first of all is we want to look through all the uh genres, right? So basically what I'm, what I'm saying here is that if we go back here, so this is our data set. So what we wanna do is like loop through all of these folders and then analyze like this um uh songs like one by one. Cool. So how do we do that? Well, turns out it's quite simple if you have a uh if you rely on a um",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=389s",
        "start_time": "389.25"
    },
    {
        "id": "d1aa32f5",
        "text": "right? But now, obviously, we don't need any of this. We just need the, the schema uh overall and we're gonna just like then fill it in while we analyze stuff. So let's go and analyze things, right? So what we wanna do, first of all is we want to look through all the uh genres, right? So basically what I'm, what I'm saying here is that if we go back here, so this is our data set. So what we wanna do is like loop through all of these folders and then analyze like this um uh songs like one by one. Cool. So how do we do that? Well, turns out it's quite simple if you have a uh if you rely on a um function on a method that's in the OS uh module and the f the method it's called walk. So we'll do a four and we'll say here, dear path, dear names and file names",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=417s",
        "start_time": "417.089"
    },
    {
        "id": "58e21599",
        "text": "so this is our data set. So what we wanna do is like loop through all of these folders and then analyze like this um uh songs like one by one. Cool. So how do we do that? Well, turns out it's quite simple if you have a uh if you rely on a um function on a method that's in the OS uh module and the f the method it's called walk. So we'll do a four and we'll say here, dear path, dear names and file names in. We'll do O Os dot Walk and we'll pass in the data set path. Ok. So what's this? So, the deer path is the current, uh, folder is the path to the folder we're currently in.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=447s",
        "start_time": "447.339"
    },
    {
        "id": "14feb029",
        "text": "function on a method that's in the OS uh module and the f the method it's called walk. So we'll do a four and we'll say here, dear path, dear names and file names in. We'll do O Os dot Walk and we'll pass in the data set path. Ok. So what's this? So, the deer path is the current, uh, folder is the path to the folder we're currently in. The dear names are all the names of the sub folders in the deer path, uh, in the depth folder. And the file names are all the files that we have in dearth, right? So this is like very, very useful because then we can uh recursively going through uh all of our folders, all of our data sets recursively and, and to do that, we just use the, this OS dot Walk uh utility method which is quite cool.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=471s",
        "start_time": "471.239"
    },
    {
        "id": "dee5b34f",
        "text": "in. We'll do O Os dot Walk and we'll pass in the data set path. Ok. So what's this? So, the deer path is the current, uh, folder is the path to the folder we're currently in. The dear names are all the names of the sub folders in the deer path, uh, in the depth folder. And the file names are all the files that we have in dearth, right? So this is like very, very useful because then we can uh recursively going through uh all of our folders, all of our data sets recursively and, and to do that, we just use the, this OS dot Walk uh utility method which is quite cool. Ok. But uh we just don't want this information. We also want the count here and the count is needed because we're gonna use it for LA for like these labels here. So,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=488s",
        "start_time": "488.679"
    },
    {
        "id": "b9d49b3e",
        "text": "The dear names are all the names of the sub folders in the deer path, uh, in the depth folder. And the file names are all the files that we have in dearth, right? So this is like very, very useful because then we can uh recursively going through uh all of our folders, all of our data sets recursively and, and to do that, we just use the, this OS dot Walk uh utility method which is quite cool. Ok. But uh we just don't want this information. We also want the count here and the count is needed because we're gonna use it for LA for like these labels here. So, uh let's do that. So if we want also like the count, which is basically the number of um uh number of iterations we are currently in. We want to use uh enumerate. So we want to enumerate this Os dot Work in data set, uh data set path and this will unpack",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=508s",
        "start_time": "508.51"
    },
    {
        "id": "5ccd83b3",
        "text": "Ok. But uh we just don't want this information. We also want the count here and the count is needed because we're gonna use it for LA for like these labels here. So, uh let's do that. So if we want also like the count, which is basically the number of um uh number of iterations we are currently in. We want to use uh enumerate. So we want to enumerate this Os dot Work in data set, uh data set path and this will unpack this value giving us like the, the counts, the current loop, uh current iteration we are in plus their path, their names and, and file names.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=537s",
        "start_time": "537.409"
    },
    {
        "id": "7792fcde",
        "text": "uh let's do that. So if we want also like the count, which is basically the number of um uh number of iterations we are currently in. We want to use uh enumerate. So we want to enumerate this Os dot Work in data set, uh data set path and this will unpack this value giving us like the, the counts, the current loop, uh current iteration we are in plus their path, their names and, and file names. Cool.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=550s",
        "start_time": "550.26"
    },
    {
        "id": "bba014e7",
        "text": "this value giving us like the, the counts, the current loop, uh current iteration we are in plus their path, their names and, and file names. Cool. OK. So, uh what we wanna do here, first of all is we want to ensure uh that uh we are uh not uh at the",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=571s",
        "start_time": "571.179"
    },
    {
        "id": "eb90482a",
        "text": "Cool. OK. So, uh what we wanna do here, first of all is we want to ensure uh that uh we are uh not uh at the root level.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=579s",
        "start_time": "579.95"
    },
    {
        "id": "b204da0a",
        "text": "OK. So, uh what we wanna do here, first of all is we want to ensure uh that uh we are uh not uh at the root level. So we are not at the, at, at the data set level. Uh Right. So because we want to go through all the the folders uh sub folders here like blues classical, but Os dot walk uh will give us as during the first situation uh data set path itself, right? So it, it'll give us in their path, data set path. And we, we don't want that because like, we don't, we don't need it, right?",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=581s",
        "start_time": "581.26"
    },
    {
        "id": "5c33ff42",
        "text": "root level. So we are not at the, at, at the data set level. Uh Right. So because we want to go through all the the folders uh sub folders here like blues classical, but Os dot walk uh will give us as during the first situation uh data set path itself, right? So it, it'll give us in their path, data set path. And we, we don't want that because like, we don't, we don't need it, right? And so we want to ensure that we are at the genre level, right? At the genres of folders. And so for doing that, we'll do if, um, we'll do deer path,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=595s",
        "start_time": "595.979"
    },
    {
        "id": "bd5be4c2",
        "text": "So we are not at the, at, at the data set level. Uh Right. So because we want to go through all the the folders uh sub folders here like blues classical, but Os dot walk uh will give us as during the first situation uh data set path itself, right? So it, it'll give us in their path, data set path. And we, we don't want that because like, we don't, we don't need it, right? And so we want to ensure that we are at the genre level, right? At the genres of folders. And so for doing that, we'll do if, um, we'll do deer path, uh, is not a dataset path and then you will write, uh, like our magic, right? Ok. So now let me do just like a thing here. Uh, so let me just write the data set path here like as a constant. And here we have,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=598s",
        "start_time": "598.69"
    },
    {
        "id": "3b55ca93",
        "text": "And so we want to ensure that we are at the genre level, right? At the genres of folders. And so for doing that, we'll do if, um, we'll do deer path, uh, is not a dataset path and then you will write, uh, like our magic, right? Ok. So now let me do just like a thing here. Uh, so let me just write the data set path here like as a constant. And here we have, uh, I created a reduced version of the, uh Marcia data set, which has only one song per genre. And I've done that because like it's gonna be like way faster, uh, to, to process everything. But then you can, you should use here like the, the path to the, the Marcia data set, right? To the full one.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=627s",
        "start_time": "627.25"
    },
    {
        "id": "d6dba407",
        "text": "uh, is not a dataset path and then you will write, uh, like our magic, right? Ok. So now let me do just like a thing here. Uh, so let me just write the data set path here like as a constant. And here we have, uh, I created a reduced version of the, uh Marcia data set, which has only one song per genre. And I've done that because like it's gonna be like way faster, uh, to, to process everything. But then you can, you should use here like the, the path to the, the Marcia data set, right? To the full one. So, and here we put the Jason path and here I'm gonna put in. Yeah, let's say data dot Jason, right? And obviously here uh I'm, I'll be saving stuff like in the, in the current uh like a working folder,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=640s",
        "start_time": "640.099"
    },
    {
        "id": "696d9a2e",
        "text": "uh, I created a reduced version of the, uh Marcia data set, which has only one song per genre. And I've done that because like it's gonna be like way faster, uh, to, to process everything. But then you can, you should use here like the, the path to the, the Marcia data set, right? To the full one. So, and here we put the Jason path and here I'm gonna put in. Yeah, let's say data dot Jason, right? And obviously here uh I'm, I'll be saving stuff like in the, in the current uh like a working folder, right? OK. So let's go back here. So we can say uh So here uh now what we uh want to do is to, first of all uh like save uh the uh semantic uh label and what do I mean by that? Well, I mean, I want to save in mappings over here.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=661s",
        "start_time": "661.679"
    },
    {
        "id": "6f719fbe",
        "text": "So, and here we put the Jason path and here I'm gonna put in. Yeah, let's say data dot Jason, right? And obviously here uh I'm, I'll be saving stuff like in the, in the current uh like a working folder, right? OK. So let's go back here. So we can say uh So here uh now what we uh want to do is to, first of all uh like save uh the uh semantic uh label and what do I mean by that? Well, I mean, I want to save in mappings over here. Uh, I want to say things like, uh, classical, for example, right? Or at the next situation blues, right? So how do we do that? Well, so",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=682s",
        "start_time": "682.739"
    },
    {
        "id": "bd2d2060",
        "text": "right? OK. So let's go back here. So we can say uh So here uh now what we uh want to do is to, first of all uh like save uh the uh semantic uh label and what do I mean by that? Well, I mean, I want to save in mappings over here. Uh, I want to say things like, uh, classical, for example, right? Or at the next situation blues, right? So how do we do that? Well, so we know that a deer path,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=701s",
        "start_time": "701.63"
    },
    {
        "id": "1c0721a6",
        "text": "Uh, I want to say things like, uh, classical, for example, right? Or at the next situation blues, right? So how do we do that? Well, so we know that a deer path, uh, deer path, uh, is the, uh, gives us like the, the path of the, uh, current directory. So, in our case, what we're looking at is we want to take deer path and we want to pass from the deer path to its components.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=728s",
        "start_time": "728.039"
    },
    {
        "id": "27b1ba91",
        "text": "we know that a deer path, uh, deer path, uh, is the, uh, gives us like the, the path of the, uh, current directory. So, in our case, what we're looking at is we want to take deer path and we want to pass from the deer path to its components. So, how do we do that? Well, we do a",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=739s",
        "start_time": "739.979"
    },
    {
        "id": "91cc2458",
        "text": "uh, deer path, uh, is the, uh, gives us like the, the path of the, uh, current directory. So, in our case, what we're looking at is we want to take deer path and we want to pass from the deer path to its components. So, how do we do that? Well, we do a dear,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=744s",
        "start_time": "744.4"
    },
    {
        "id": "ce879e84",
        "text": "So, how do we do that? Well, we do a dear, uh, dear path dot uh, we're gonna split it and we're gonna split it, uh, based on the, uh, slash. So this basically means that if we have a deer path, uh, which is, for example, genre slash, uh, blues,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=768s",
        "start_time": "768.03"
    },
    {
        "id": "4f564fe0",
        "text": "dear, uh, dear path dot uh, we're gonna split it and we're gonna split it, uh, based on the, uh, slash. So this basically means that if we have a deer path, uh, which is, for example, genre slash, uh, blues, this is gonna give us,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=772s",
        "start_time": "772.429"
    },
    {
        "id": "b77d32b2",
        "text": "uh, dear path dot uh, we're gonna split it and we're gonna split it, uh, based on the, uh, slash. So this basically means that if we have a deer path, uh, which is, for example, genre slash, uh, blues, this is gonna give us, right? This is gonna give us a list, uh, where we have a genre and blues.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=774s",
        "start_time": "774.2"
    },
    {
        "id": "a25515fb",
        "text": "this is gonna give us, right? This is gonna give us a list, uh, where we have a genre and blues. Right now, we are interested in this semantic label. So blues for our mapping and so",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=794s",
        "start_time": "794.25"
    },
    {
        "id": "79fbe207",
        "text": "right? This is gonna give us a list, uh, where we have a genre and blues. Right now, we are interested in this semantic label. So blues for our mapping and so we could isolate the semantic uh uh label",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=798s",
        "start_time": "798.729"
    },
    {
        "id": "7d1ea855",
        "text": "Right now, we are interested in this semantic label. So blues for our mapping and so we could isolate the semantic uh uh label doing a dip path components. And considering only the last uh the value like for the last index, which is basically this blues here. Nice. So now we have the semantic label. So what we wanna do is to a append it to the mapping.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=806s",
        "start_time": "806.9"
    },
    {
        "id": "a29c7b95",
        "text": "we could isolate the semantic uh uh label doing a dip path components. And considering only the last uh the value like for the last index, which is basically this blues here. Nice. So now we have the semantic label. So what we wanna do is to a append it to the mapping. So we'll do a data mapping dot uh append and we'll append the uh semantic label. Nice. So this is like the, the first path and the first thing, the first step, right?",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=815s",
        "start_time": "815.2"
    },
    {
        "id": "12e66670",
        "text": "doing a dip path components. And considering only the last uh the value like for the last index, which is basically this blues here. Nice. So now we have the semantic label. So what we wanna do is to a append it to the mapping. So we'll do a data mapping dot uh append and we'll append the uh semantic label. Nice. So this is like the, the first path and the first thing, the first step, right? So now what we wanna do next is we want to go through all the files in the current deer path in the current, uh, genre folder. So, for doing that, uh, we, so, well, first of all, like, let's comment this. So let's say process,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=824s",
        "start_time": "824.0"
    },
    {
        "id": "0afe21d9",
        "text": "So we'll do a data mapping dot uh append and we'll append the uh semantic label. Nice. So this is like the, the first path and the first thing, the first step, right? So now what we wanna do next is we want to go through all the files in the current deer path in the current, uh, genre folder. So, for doing that, uh, we, so, well, first of all, like, let's comment this. So let's say process, uh, files for a specific, uh, genre. Ok? So, uh, we'll do a four loop and so we'll do a four F in file names.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=845s",
        "start_time": "845.58"
    },
    {
        "id": "954a9e82",
        "text": "So now what we wanna do next is we want to go through all the files in the current deer path in the current, uh, genre folder. So, for doing that, uh, we, so, well, first of all, like, let's comment this. So let's say process, uh, files for a specific, uh, genre. Ok? So, uh, we'll do a four loop and so we'll do a four F in file names. And here",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=860s",
        "start_time": "860.95"
    },
    {
        "id": "c4f5b16d",
        "text": "uh, files for a specific, uh, genre. Ok? So, uh, we'll do a four loop and so we'll do a four F in file names. And here we are, we, so, first of all, we need to, uh, get the five path,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=879s",
        "start_time": "879.7"
    },
    {
        "id": "646c0c49",
        "text": "And here we are, we, so, first of all, we need to, uh, get the five path, right? Because the file name itself. So this f gives us just like the, the name of the file. It's not the full path. And so we actually need the full path for loading the,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=896s",
        "start_time": "896.789"
    },
    {
        "id": "470900a6",
        "text": "we are, we, so, first of all, we need to, uh, get the five path, right? Because the file name itself. So this f gives us just like the, the name of the file. It's not the full path. And so we actually need the full path for loading the, uh, for, for loading the audio file, right? And so for, uh, arriving at the five path, we'll do an Os dot path",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=898s",
        "start_time": "898.52"
    },
    {
        "id": "1140bf58",
        "text": "right? Because the file name itself. So this f gives us just like the, the name of the file. It's not the full path. And so we actually need the full path for loading the, uh, for, for loading the audio file, right? And so for, uh, arriving at the five path, we'll do an Os dot path dot uh, join and we'll pass in, uh, initially the deer path",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=906s",
        "start_time": "906.229"
    },
    {
        "id": "9f15d849",
        "text": "uh, for, for loading the audio file, right? And so for, uh, arriving at the five path, we'll do an Os dot path dot uh, join and we'll pass in, uh, initially the deer path and the file name,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=921s",
        "start_time": "921.44"
    },
    {
        "id": "99acd260",
        "text": "dot uh, join and we'll pass in, uh, initially the deer path and the file name, which is F right. So why do we want to do that? Well, because we want to load the audio file. So now we have the, the, the, the file path. And the next thing for loading the audio file is",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=930s",
        "start_time": "930.51"
    },
    {
        "id": "c8def979",
        "text": "and the file name, which is F right. So why do we want to do that? Well, because we want to load the audio file. So now we have the, the, the, the file path. And the next thing for loading the audio file is importing Lib Rosa",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=937s",
        "start_time": "937.719"
    },
    {
        "id": "6ccc8185",
        "text": "which is F right. So why do we want to do that? Well, because we want to load the audio file. So now we have the, the, the, the file path. And the next thing for loading the audio file is importing Lib Rosa saying",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=940s",
        "start_time": "940.799"
    },
    {
        "id": "592c7a08",
        "text": "importing Lib Rosa saying uh in the previous video I showed how to use Li Breza, which is this great uh audio uh like processing uh library. So if you don't know uh if you haven't watched the video, just like, go back because they like that's quite uh detail about how to do a bunch of stuff with Libera.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=957s",
        "start_time": "957.489"
    },
    {
        "id": "4858ebff",
        "text": "saying uh in the previous video I showed how to use Li Breza, which is this great uh audio uh like processing uh library. So if you don't know uh if you haven't watched the video, just like, go back because they like that's quite uh detail about how to do a bunch of stuff with Libera. But uh let's go back here. So now what we want to do is load this file and so we are gonna have the signal and the uh sample rate. And uh here we'll do a li browser dot uh load and we need to pass the file and we'll pass the file path and then we'll need to specify the uh sample rate. And uh let's assume that we have a constant here for the sample rate,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=960s",
        "start_time": "960.52"
    },
    {
        "id": "3abc585f",
        "text": "uh in the previous video I showed how to use Li Breza, which is this great uh audio uh like processing uh library. So if you don't know uh if you haven't watched the video, just like, go back because they like that's quite uh detail about how to do a bunch of stuff with Libera. But uh let's go back here. So now what we want to do is load this file and so we are gonna have the signal and the uh sample rate. And uh here we'll do a li browser dot uh load and we need to pass the file and we'll pass the file path and then we'll need to specify the uh sample rate. And uh let's assume that we have a constant here for the sample rate, okay? And so we'll put it over here. And so we'll say SA Mle",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=962s",
        "start_time": "962.2"
    },
    {
        "id": "de526bc4",
        "text": "But uh let's go back here. So now what we want to do is load this file and so we are gonna have the signal and the uh sample rate. And uh here we'll do a li browser dot uh load and we need to pass the file and we'll pass the file path and then we'll need to specify the uh sample rate. And uh let's assume that we have a constant here for the sample rate, okay? And so we'll put it over here. And so we'll say SA Mle uh rates is equal to 2 22,000 uh 50 which is a customary uh value for sample rate when we do music processing. OK. And so now we've uh loaded the uh audio file, OK?",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=979s",
        "start_time": "979.65"
    },
    {
        "id": "be80778b",
        "text": "okay? And so we'll put it over here. And so we'll say SA Mle uh rates is equal to 2 22,000 uh 50 which is a customary uh value for sample rate when we do music processing. OK. And so now we've uh loaded the uh audio file, OK? But now we can't just analyze and extract the MF CCS like at this level because uh we want to like analyze and extract MF CCS at the level of the segments, right? And so now we need to like divide like this signal into a bunch of different uh segments. And so what we need to do here",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1007s",
        "start_time": "1007.599"
    },
    {
        "id": "a5e362d3",
        "text": "uh rates is equal to 2 22,000 uh 50 which is a customary uh value for sample rate when we do music processing. OK. And so now we've uh loaded the uh audio file, OK? But now we can't just analyze and extract the MF CCS like at this level because uh we want to like analyze and extract MF CCS at the level of the segments, right? And so now we need to like divide like this signal into a bunch of different uh segments. And so what we need to do here is to process uh segments, extracting MFCC and uh storing",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1015s",
        "start_time": "1015.34"
    },
    {
        "id": "1df3a38a",
        "text": "But now we can't just analyze and extract the MF CCS like at this level because uh we want to like analyze and extract MF CCS at the level of the segments, right? And so now we need to like divide like this signal into a bunch of different uh segments. And so what we need to do here is to process uh segments, extracting MFCC and uh storing uh yeah, the data, right.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1032s",
        "start_time": "1032.06"
    },
    {
        "id": "6fc1e472",
        "text": "is to process uh segments, extracting MFCC and uh storing uh yeah, the data, right. Uh And yeah, storing data, process segments, extracting and storing data. Yes. OK. So what we'll do here is another for loop, nested loop. And so here we'll do for s in a range, a number of segments. And so we're going through like all the segments. And here what we wanna do",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1056s",
        "start_time": "1056.189"
    },
    {
        "id": "12114dfa",
        "text": "uh yeah, the data, right. Uh And yeah, storing data, process segments, extracting and storing data. Yes. OK. So what we'll do here is another for loop, nested loop. And so here we'll do for s in a range, a number of segments. And so we're going through like all the segments. And here what we wanna do is to have a for each segment, we need",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1067s",
        "start_time": "1067.25"
    },
    {
        "id": "28829b60",
        "text": "Uh And yeah, storing data, process segments, extracting and storing data. Yes. OK. So what we'll do here is another for loop, nested loop. And so here we'll do for s in a range, a number of segments. And so we're going through like all the segments. And here what we wanna do is to have a for each segment, we need a, a start uh sample in the signal and we need a um finish sample,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1070s",
        "start_time": "1070.17"
    },
    {
        "id": "739fcd4c",
        "text": "is to have a for each segment, we need a, a start uh sample in the signal and we need a um finish sample, right. OK. And so the, the start sample is gonna be given by an bear a second uh with makers, this is gonna be a little bit like convoluted. So here we want the number",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1092s",
        "start_time": "1092.13"
    },
    {
        "id": "e6637c8c",
        "text": "a, a start uh sample in the signal and we need a um finish sample, right. OK. And so the, the start sample is gonna be given by an bear a second uh with makers, this is gonna be a little bit like convoluted. So here we want the number uh of samples",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1099s",
        "start_time": "1099.569"
    },
    {
        "id": "1f83cef5",
        "text": "right. OK. And so the, the start sample is gonna be given by an bear a second uh with makers, this is gonna be a little bit like convoluted. So here we want the number uh of samples P",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1111s",
        "start_time": "1111.04"
    },
    {
        "id": "3d205f53",
        "text": "uh of samples P segment",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1126s",
        "start_time": "1126.979"
    },
    {
        "id": "aabafcbe",
        "text": "P segment multiplied",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1130s",
        "start_time": "1130.589"
    },
    {
        "id": "2e0f8f07",
        "text": "segment multiplied uh by S which is like the, the current segment uh we are in and now the finish sample is gonna be the start sample plus the number of samples per uh segment.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1133s",
        "start_time": "1133.219"
    },
    {
        "id": "58d35ba3",
        "text": "multiplied uh by S which is like the, the current segment uh we are in and now the finish sample is gonna be the start sample plus the number of samples per uh segment. OK. So uh le let's move on and then I'll create uh uh I'll derive like this variable here. Cool. So basically what we wanna do here is to get the MF CCS and for doing that, we'll do a lib Rosa dot uh feature dot MFCC. And here we need to pass the signal in. But here you'll see that we'll,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1135s",
        "start_time": "1135.579"
    },
    {
        "id": "032bfbce",
        "text": "uh by S which is like the, the current segment uh we are in and now the finish sample is gonna be the start sample plus the number of samples per uh segment. OK. So uh le let's move on and then I'll create uh uh I'll derive like this variable here. Cool. So basically what we wanna do here is to get the MF CCS and for doing that, we'll do a lib Rosa dot uh feature dot MFCC. And here we need to pass the signal in. But here you'll see that we'll, we, we don't want to analyze the whole signal, but we want to analyze a slice of that. And so the slice is gonna be between the start sample and the finish sample, right? And then we need to pass in the uh sample rate and the sample rate is gonna be equal to SR and then we want to pass in",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1138s",
        "start_time": "1138.459"
    },
    {
        "id": "57329213",
        "text": "OK. So uh le let's move on and then I'll create uh uh I'll derive like this variable here. Cool. So basically what we wanna do here is to get the MF CCS and for doing that, we'll do a lib Rosa dot uh feature dot MFCC. And here we need to pass the signal in. But here you'll see that we'll, we, we don't want to analyze the whole signal, but we want to analyze a slice of that. And so the slice is gonna be between the start sample and the finish sample, right? And then we need to pass in the uh sample rate and the sample rate is gonna be equal to SR and then we want to pass in all of these values here, right. So the number of MF CCS, the number uh the interval that we are considering for the four transfer and the hop lamp, the sliding window uh right. And so we'll do any NFFT is equal to N",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1156s",
        "start_time": "1156.829"
    },
    {
        "id": "edb4cedb",
        "text": "we, we don't want to analyze the whole signal, but we want to analyze a slice of that. And so the slice is gonna be between the start sample and the finish sample, right? And then we need to pass in the uh sample rate and the sample rate is gonna be equal to SR and then we want to pass in all of these values here, right. So the number of MF CCS, the number uh the interval that we are considering for the four transfer and the hop lamp, the sliding window uh right. And so we'll do any NFFT is equal to N FFT, then we'll do a um mm NMFCC is equal to",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1183s",
        "start_time": "1183.979"
    },
    {
        "id": "540cdbdd",
        "text": "all of these values here, right. So the number of MF CCS, the number uh the interval that we are considering for the four transfer and the hop lamp, the sliding window uh right. And so we'll do any NFFT is equal to N FFT, then we'll do a um mm NMFCC is equal to NMFC over here.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1207s",
        "start_time": "1207.29"
    },
    {
        "id": "6bc1a70d",
        "text": "FFT, then we'll do a um mm NMFCC is equal to NMFC over here. And then we'll do a",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1225s",
        "start_time": "1225.619"
    },
    {
        "id": "56ac0c8a",
        "text": "NMFC over here. And then we'll do a H length which is again equal to help length. And these are all values that we got from uh the arguments of the, of the function itself, right? Cool. OK. So now, as you can see here,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1235s",
        "start_time": "1235.88"
    },
    {
        "id": "80c106db",
        "text": "And then we'll do a H length which is again equal to help length. And these are all values that we got from uh the arguments of the, of the function itself, right? Cool. OK. So now, as you can see here, we, we are just analyzing uh a slice of the signal which is the slice which is irrelevant for the current segment. And so for the start sample and the finish sample, as we said, we need the overall number of samples per uh segment. So let's calculate this. And we given like this is like a something that remains like unchanged throughout. So we could um calculate that in here.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1238s",
        "start_time": "1238.27"
    },
    {
        "id": "bfeaf508",
        "text": "H length which is again equal to help length. And these are all values that we got from uh the arguments of the, of the function itself, right? Cool. OK. So now, as you can see here, we, we are just analyzing uh a slice of the signal which is the slice which is irrelevant for the current segment. And so for the start sample and the finish sample, as we said, we need the overall number of samples per uh segment. So let's calculate this. And we given like this is like a something that remains like unchanged throughout. So we could um calculate that in here. And so the overall number of samples per segment is given by the number.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1241s",
        "start_time": "1241.189"
    },
    {
        "id": "4d8cb865",
        "text": "we, we are just analyzing uh a slice of the signal which is the slice which is irrelevant for the current segment. And so for the start sample and the finish sample, as we said, we need the overall number of samples per uh segment. So let's calculate this. And we given like this is like a something that remains like unchanged throughout. So we could um calculate that in here. And so the overall number of samples per segment is given by the number. Uh So it's samples",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1257s",
        "start_time": "1257.4"
    },
    {
        "id": "0a1bc761",
        "text": "And so the overall number of samples per segment is given by the number. Uh So it's samples per",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1286s",
        "start_time": "1286.29"
    },
    {
        "id": "6ee23d2d",
        "text": "Uh So it's samples per truck",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1295s",
        "start_time": "1295.359"
    },
    {
        "id": "5f23cf3d",
        "text": "per truck divided by the number of segments, right? So now this samples per truck is the overall number of samples in a, in a, in a truck, in a sample, right? Uh And we can do, we should do like a an inch of this. So we are casting this like in, right? OK. So obviously we don't have this samples per truck and this is a constant and we need to like create it over here.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1300s",
        "start_time": "1300.239"
    },
    {
        "id": "a55a4e66",
        "text": "truck divided by the number of segments, right? So now this samples per truck is the overall number of samples in a, in a, in a truck, in a sample, right? Uh And we can do, we should do like a an inch of this. So we are casting this like in, right? OK. So obviously we don't have this samples per truck and this is a constant and we need to like create it over here. So, and the Sa Mples per truck is given by the Sa Mle rate multiplied by the",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1301s",
        "start_time": "1301.91"
    },
    {
        "id": "02a42409",
        "text": "divided by the number of segments, right? So now this samples per truck is the overall number of samples in a, in a, in a truck, in a sample, right? Uh And we can do, we should do like a an inch of this. So we are casting this like in, right? OK. So obviously we don't have this samples per truck and this is a constant and we need to like create it over here. So, and the Sa Mples per truck is given by the Sa Mle rate multiplied by the duration, right? And we know that with the Mariah data set, the duration is a 30 it's given uh in uh seconds, right? So,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1303s",
        "start_time": "1303.64"
    },
    {
        "id": "e6c82917",
        "text": "So, and the Sa Mples per truck is given by the Sa Mle rate multiplied by the duration, right? And we know that with the Mariah data set, the duration is a 30 it's given uh in uh seconds, right? So, OK, so let's recap this because this was quite, quite the jump, right? OK. So we have the sample rate which is 22,050 the duration of each um audio file is 30 seconds. So the overall number of samples per track is given by the sample rate multiplied by the duration right",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1332s",
        "start_time": "1332.52"
    },
    {
        "id": "369a5ffd",
        "text": "duration, right? And we know that with the Mariah data set, the duration is a 30 it's given uh in uh seconds, right? So, OK, so let's recap this because this was quite, quite the jump, right? OK. So we have the sample rate which is 22,050 the duration of each um audio file is 30 seconds. So the overall number of samples per track is given by the sample rate multiplied by the duration right now. Uh We are interested in the number of samples for each segment and this is obviously given by the overall number of samples per track divided by the number of segments, right? And",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1340s",
        "start_time": "1340.88"
    },
    {
        "id": "cf85f68e",
        "text": "OK, so let's recap this because this was quite, quite the jump, right? OK. So we have the sample rate which is 22,050 the duration of each um audio file is 30 seconds. So the overall number of samples per track is given by the sample rate multiplied by the duration right now. Uh We are interested in the number of samples for each segment and this is obviously given by the overall number of samples per track divided by the number of segments, right? And now when we go down here, the start sample for each sample uh for sorry for each segment for each song is given by the number of samples per segment multiplied by uh the, the, the current segment we are in. OK. So uh let's for uh s equal to zero, for example. So we are basically at the, at the first segment,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1356s",
        "start_time": "1356.949"
    },
    {
        "id": "eba03e45",
        "text": "now. Uh We are interested in the number of samples for each segment and this is obviously given by the overall number of samples per track divided by the number of segments, right? And now when we go down here, the start sample for each sample uh for sorry for each segment for each song is given by the number of samples per segment multiplied by uh the, the, the current segment we are in. OK. So uh let's for uh s equal to zero, for example. So we are basically at the, at the first segment, this is equal to zero, right? Yeah, because we are starting at zero. And here the, the finish sample for S equal to zero is as we expect equal to",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1376s",
        "start_time": "1376.819"
    },
    {
        "id": "7263e9f4",
        "text": "now when we go down here, the start sample for each sample uh for sorry for each segment for each song is given by the number of samples per segment multiplied by uh the, the, the current segment we are in. OK. So uh let's for uh s equal to zero, for example. So we are basically at the, at the first segment, this is equal to zero, right? Yeah, because we are starting at zero. And here the, the finish sample for S equal to zero is as we expect equal to the number of samples per, per segment, right? Because we are doing like a whole uh interval which is like the whole number of samples per segment. And then we just like slide and add uh like we just like a slide to the right, adding the number of samples per segment for each um uh segment we are calculating, right. OK. So now we have the MFCC but we need to do one thing",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1390s",
        "start_time": "1390.75"
    },
    {
        "id": "1c55c45d",
        "text": "this is equal to zero, right? Yeah, because we are starting at zero. And here the, the finish sample for S equal to zero is as we expect equal to the number of samples per, per segment, right? Because we are doing like a whole uh interval which is like the whole number of samples per segment. And then we just like slide and add uh like we just like a slide to the right, adding the number of samples per segment for each um uh segment we are calculating, right. OK. So now we have the MFCC but we need to do one thing which is MFCC dot T. So we, we want to let the transfers uh like this because like it's gonna be like",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1419s",
        "start_time": "1419.599"
    },
    {
        "id": "bfaa5548",
        "text": "the number of samples per, per segment, right? Because we are doing like a whole uh interval which is like the whole number of samples per segment. And then we just like slide and add uh like we just like a slide to the right, adding the number of samples per segment for each um uh segment we are calculating, right. OK. So now we have the MFCC but we need to do one thing which is MFCC dot T. So we, we want to let the transfers uh like this because like it's gonna be like uh yeah, nicer to work with this. Now, uh there's one thing that we would uh would need to specify here. So sometimes it turns out that uh the uh audio files don't have, yeah, the, the expected like an overall like number of samples because like the duration is slightly like more or less like that what we would expect,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1436s",
        "start_time": "1436.349"
    },
    {
        "id": "6a4b5da6",
        "text": "which is MFCC dot T. So we, we want to let the transfers uh like this because like it's gonna be like uh yeah, nicer to work with this. Now, uh there's one thing that we would uh would need to specify here. So sometimes it turns out that uh the uh audio files don't have, yeah, the, the expected like an overall like number of samples because like the duration is slightly like more or less like that what we would expect, which basically means that when we do like the MFCC, we may have like more uh vectors, more or less vectors like than expected. And we don't want to uh include those like in our data set because when we pass uh like this MF CCS as training data, we need uh like for the training data to have all the same shape, right?",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1463s",
        "start_time": "1463.92"
    },
    {
        "id": "48a45ca5",
        "text": "uh yeah, nicer to work with this. Now, uh there's one thing that we would uh would need to specify here. So sometimes it turns out that uh the uh audio files don't have, yeah, the, the expected like an overall like number of samples because like the duration is slightly like more or less like that what we would expect, which basically means that when we do like the MFCC, we may have like more uh vectors, more or less vectors like than expected. And we don't want to uh include those like in our data set because when we pass uh like this MF CCS as training data, we need uh like for the training data to have all the same shape, right? And we need to ensure that we have like the same number of uh MF CCS vectors for each segment. OK. And so what we want to do here is we want to first of all calculate the expected",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1472s",
        "start_time": "1472.77"
    },
    {
        "id": "eb6c12e6",
        "text": "which basically means that when we do like the MFCC, we may have like more uh vectors, more or less vectors like than expected. And we don't want to uh include those like in our data set because when we pass uh like this MF CCS as training data, we need uh like for the training data to have all the same shape, right? And we need to ensure that we have like the same number of uh MF CCS vectors for each segment. OK. And so what we want to do here is we want to first of all calculate the expected number",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1495s",
        "start_time": "1495.04"
    },
    {
        "id": "7ff28c80",
        "text": "And we need to ensure that we have like the same number of uh MF CCS vectors for each segment. OK. And so what we want to do here is we want to first of all calculate the expected number NFCC vectors",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1518s",
        "start_time": "1518.329"
    },
    {
        "id": "2cae13ed",
        "text": "number NFCC vectors per",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1537s",
        "start_time": "1537.68"
    },
    {
        "id": "2c7bfe05",
        "text": "NFCC vectors per segment,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1539s",
        "start_time": "1539.729"
    },
    {
        "id": "6e19ebdb",
        "text": "per segment, right? So this is a ridiculously long variable, but I hope it's quite clear, right? And so in this case, uh this, this value is given by the number of uh samples",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1544s",
        "start_time": "1544.829"
    },
    {
        "id": "0bf60325",
        "text": "segment, right? So this is a ridiculously long variable, but I hope it's quite clear, right? And so in this case, uh this, this value is given by the number of uh samples per segment",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1546s",
        "start_time": "1546.609"
    },
    {
        "id": "5caf61a4",
        "text": "right? So this is a ridiculously long variable, but I hope it's quite clear, right? And so in this case, uh this, this value is given by the number of uh samples per segment and uh it's divided by",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1548s",
        "start_time": "1548.28"
    },
    {
        "id": "650c2e75",
        "text": "per segment and uh it's divided by the hot length.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1566s",
        "start_time": "1566.469"
    },
    {
        "id": "cb749d0f",
        "text": "and uh it's divided by the hot length. So now I'm not gonna explain like into the details why this is the case. And but like if you go back uh to my video like on the fourier transform and on the MFCC, you will understand why that's the case. But that's because like we are doing uh uh",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1568s",
        "start_time": "1568.459"
    },
    {
        "id": "09358dc3",
        "text": "the hot length. So now I'm not gonna explain like into the details why this is the case. And but like if you go back uh to my video like on the fourier transform and on the MFCC, you will understand why that's the case. But that's because like we are doing uh uh like many, we are calculating the MF CCS basically like at each hop length. And so like when we want to have like the overall expected number of MFCC vectors per segment, we need just need to get all the number of samples per segment and divided it by like the, the H length.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1574s",
        "start_time": "1574.569"
    },
    {
        "id": "89033050",
        "text": "So now I'm not gonna explain like into the details why this is the case. And but like if you go back uh to my video like on the fourier transform and on the MFCC, you will understand why that's the case. But that's because like we are doing uh uh like many, we are calculating the MF CCS basically like at each hop length. And so like when we want to have like the overall expected number of MFCC vectors per segment, we need just need to get all the number of samples per segment and divided it by like the, the H length. But now this number uh could uh potentially be a value of like a float like this, right? 1.2 for example, right? Uh But uh what we actually want to do is around uh the number like to the higher integer there, like in this case like two. And so for doing that, what we wanna do is import the math",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1577s",
        "start_time": "1577.93"
    },
    {
        "id": "2c7e0649",
        "text": "like many, we are calculating the MF CCS basically like at each hop length. And so like when we want to have like the overall expected number of MFCC vectors per segment, we need just need to get all the number of samples per segment and divided it by like the, the H length. But now this number uh could uh potentially be a value of like a float like this, right? 1.2 for example, right? Uh But uh what we actually want to do is around uh the number like to the higher integer there, like in this case like two. And so for doing that, what we wanna do is import the math uh module",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1597s",
        "start_time": "1597.55"
    },
    {
        "id": "32ee359a",
        "text": "But now this number uh could uh potentially be a value of like a float like this, right? 1.2 for example, right? Uh But uh what we actually want to do is around uh the number like to the higher integer there, like in this case like two. And so for doing that, what we wanna do is import the math uh module and I use a nice function",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1617s",
        "start_time": "1617.8"
    },
    {
        "id": "24d0cc70",
        "text": "uh module and I use a nice function here that's called seal.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1647s",
        "start_time": "1647.39"
    },
    {
        "id": "d2e54424",
        "text": "and I use a nice function here that's called seal. So we'll seal this value.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1649s",
        "start_time": "1649.01"
    },
    {
        "id": "17e4dee5",
        "text": "here that's called seal. So we'll seal this value. And which basically means if we ever get something like 1.2 this value is going to be",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1652s",
        "start_time": "1652.439"
    },
    {
        "id": "39ec9073",
        "text": "So we'll seal this value. And which basically means if we ever get something like 1.2 this value is going to be uh two.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1655s",
        "start_time": "1655.189"
    },
    {
        "id": "41c74cc3",
        "text": "And which basically means if we ever get something like 1.2 this value is going to be uh two. And this is like how the NFC C like itself work, right?",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1659s",
        "start_time": "1659.3"
    },
    {
        "id": "9b072919",
        "text": "uh two. And this is like how the NFC C like itself work, right? Um OK. So now let's take like this monster variable here. And let's specify here that here we want to uh let's write the comment first. So we want to store",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1665s",
        "start_time": "1665.68"
    },
    {
        "id": "3fc5e9af",
        "text": "And this is like how the NFC C like itself work, right? Um OK. So now let's take like this monster variable here. And let's specify here that here we want to uh let's write the comment first. So we want to store uh MFCC",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1667s",
        "start_time": "1667.849"
    },
    {
        "id": "65cdbd89",
        "text": "Um OK. So now let's take like this monster variable here. And let's specify here that here we want to uh let's write the comment first. So we want to store uh MFCC for segment, if it has the expected",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1672s",
        "start_time": "1672.349"
    },
    {
        "id": "cf8175ca",
        "text": "uh MFCC for segment, if it has the expected uh length, we could put, put it like this, right?",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1689s",
        "start_time": "1689.17"
    },
    {
        "id": "18f9f108",
        "text": "for segment, if it has the expected uh length, we could put, put it like this, right? And so we can't say",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1692s",
        "start_time": "1692.859"
    },
    {
        "id": "be0686d6",
        "text": "uh length, we could put, put it like this, right? And so we can't say um",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1701s",
        "start_time": "1701.04"
    },
    {
        "id": "a61c20bc",
        "text": "And so we can't say um so if",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1705s",
        "start_time": "1705.04"
    },
    {
        "id": "ef0e68f9",
        "text": "um so if uh and so here we should say if the length",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1707s",
        "start_time": "1707.9"
    },
    {
        "id": "9d044368",
        "text": "so if uh and so here we should say if the length of the",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1709s",
        "start_time": "1709.92"
    },
    {
        "id": "17e59489",
        "text": "uh and so here we should say if the length of the MFC",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1715s",
        "start_time": "1715.369"
    },
    {
        "id": "e2a9d558",
        "text": "of the MFC is equal to this expected, then",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1721s",
        "start_time": "1721.27"
    },
    {
        "id": "e29e008f",
        "text": "MFC is equal to this expected, then we can do some stuff. But now, obviously we need to have like this MFCC value over here uh in order to uh like do some logic with it. So we need just to, to, to bring that up.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1724s",
        "start_time": "1724.3"
    },
    {
        "id": "0eddcbe2",
        "text": "is equal to this expected, then we can do some stuff. But now, obviously we need to have like this MFCC value over here uh in order to uh like do some logic with it. So we need just to, to, to bring that up. And so here we store uh like these values only if like the, the, we have like the expected number of like MFCC vectors in each segment, right. OK. So how do we do that? Well, we should do",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1728s",
        "start_time": "1728.52"
    },
    {
        "id": "136d2f3c",
        "text": "we can do some stuff. But now, obviously we need to have like this MFCC value over here uh in order to uh like do some logic with it. So we need just to, to, to bring that up. And so here we store uh like these values only if like the, the, we have like the expected number of like MFCC vectors in each segment, right. OK. So how do we do that? Well, we should do so we here, we should take the data and we'll take the MS CC and we'll do a, an append and we'll pass in the uh MFCC. But now we can just pass in the MS CC because this is, this is an NP array and we need to uh like cast that to a list because otherwise we're not gonna be able to save it uh as adjacent file.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1734s",
        "start_time": "1734.969"
    },
    {
        "id": "5fc6aa16",
        "text": "And so here we store uh like these values only if like the, the, we have like the expected number of like MFCC vectors in each segment, right. OK. So how do we do that? Well, we should do so we here, we should take the data and we'll take the MS CC and we'll do a, an append and we'll pass in the uh MFCC. But now we can just pass in the MS CC because this is, this is an NP array and we need to uh like cast that to a list because otherwise we're not gonna be able to save it uh as adjacent file. And uh then we also want to save the labels. So",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1748s",
        "start_time": "1748.459"
    },
    {
        "id": "d42e800e",
        "text": "so we here, we should take the data and we'll take the MS CC and we'll do a, an append and we'll pass in the uh MFCC. But now we can just pass in the MS CC because this is, this is an NP array and we need to uh like cast that to a list because otherwise we're not gonna be able to save it uh as adjacent file. And uh then we also want to save the labels. So data labels and here A P and here the labels is gonna be I minus one. So do you guys remember I, and it was over here and this is like why we use a numerate like in the first place, right? Because at each iteration, we are in a uh different uh genre folder like at this like higher level, right?",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1766s",
        "start_time": "1766.739"
    },
    {
        "id": "8a4dac9e",
        "text": "And uh then we also want to save the labels. So data labels and here A P and here the labels is gonna be I minus one. So do you guys remember I, and it was over here and this is like why we use a numerate like in the first place, right? Because at each iteration, we are in a uh different uh genre folder like at this like higher level, right? And so we can associate uh a value which is equal to the count of the iterations we are in to each genre. But remember the first iteration was for the, the, the data set path itself. So we're ignoring that. So that's why we, we need to uh um do like a subtraction with minus one, right? OK.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1790s",
        "start_time": "1790.78"
    },
    {
        "id": "366ab228",
        "text": "data labels and here A P and here the labels is gonna be I minus one. So do you guys remember I, and it was over here and this is like why we use a numerate like in the first place, right? Because at each iteration, we are in a uh different uh genre folder like at this like higher level, right? And so we can associate uh a value which is equal to the count of the iterations we are in to each genre. But remember the first iteration was for the, the, the data set path itself. So we're ignoring that. So that's why we, we need to uh um do like a subtraction with minus one, right? OK. And so by doing this, what we are doing is storing the MC C and labels for each uh segment which is great. And uh if you, if we look at this basically here uh at the end of this uh quite big uh like four loop with many nested loops. We are basically gonna have like the, the mappings. So we're gonna have like all the genre um",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1797s",
        "start_time": "1797.54"
    },
    {
        "id": "e39171aa",
        "text": "And so we can associate uh a value which is equal to the count of the iterations we are in to each genre. But remember the first iteration was for the, the, the data set path itself. So we're ignoring that. So that's why we, we need to uh um do like a subtraction with minus one, right? OK. And so by doing this, what we are doing is storing the MC C and labels for each uh segment which is great. And uh if you, if we look at this basically here uh at the end of this uh quite big uh like four loop with many nested loops. We are basically gonna have like the, the mappings. So we're gonna have like all the genre um uh labels here in the mapping. Then we are gonna have like this MF CCS for each segment and the labels for each uh segment as a number, right?",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1827s",
        "start_time": "1827.3"
    },
    {
        "id": "588913c9",
        "text": "And so by doing this, what we are doing is storing the MC C and labels for each uh segment which is great. And uh if you, if we look at this basically here uh at the end of this uh quite big uh like four loop with many nested loops. We are basically gonna have like the, the mappings. So we're gonna have like all the genre um uh labels here in the mapping. Then we are gonna have like this MF CCS for each segment and the labels for each uh segment as a number, right? Uh Cool. OK. So what, what I want to do here uh is to do a print and so we can do a print like this And we could say um yeah, we could just like put the, the file name here and uh we'll put the, the segment here",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1851s",
        "start_time": "1851.599"
    },
    {
        "id": "61d9b0eb",
        "text": "uh labels here in the mapping. Then we are gonna have like this MF CCS for each segment and the labels for each uh segment as a number, right? Uh Cool. OK. So what, what I want to do here uh is to do a print and so we can do a print like this And we could say um yeah, we could just like put the, the file name here and uh we'll put the, the segment here and here we'll do a dot format. And um here this, this should be f the, the name like or the, well,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1879s",
        "start_time": "1879.189"
    },
    {
        "id": "f768b33d",
        "text": "Uh Cool. OK. So what, what I want to do here uh is to do a print and so we can do a print like this And we could say um yeah, we could just like put the, the file name here and uh we'll put the, the segment here and here we'll do a dot format. And um here this, this should be f the, the name like or the, well, we could put in like file path, right? So it's the whole file path. And then here we also like specify which segment we are processing. Cool. And then I wanted to do like also like another print uh at this",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1889s",
        "start_time": "1889.229"
    },
    {
        "id": "32fd62dd",
        "text": "and here we'll do a dot format. And um here this, this should be f the, the name like or the, well, we could put in like file path, right? So it's the whole file path. And then here we also like specify which segment we are processing. Cool. And then I wanted to do like also like another print uh at this level here.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1908s",
        "start_time": "1908.719"
    },
    {
        "id": "d500fd38",
        "text": "we could put in like file path, right? So it's the whole file path. And then here we also like specify which segment we are processing. Cool. And then I wanted to do like also like another print uh at this level here. So here, if you guys remember, we are at the level of the, of the genre of the folder. And so uh here we could do a uh print where we say uh say",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1920s",
        "start_time": "1920.609"
    },
    {
        "id": "f538ff0b",
        "text": "level here. So here, if you guys remember, we are at the level of the, of the genre of the folder. And so uh here we could do a uh print where we say uh say we, we do a new line and then we say uh processing",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1937s",
        "start_time": "1937.16"
    },
    {
        "id": "a9dbe63f",
        "text": "So here, if you guys remember, we are at the level of the, of the genre of the folder. And so uh here we could do a uh print where we say uh say we, we do a new line and then we say uh processing and we'll pass in uh the semantic label. So here we'll, we'll get like processing blues processing classical. So just like to, to keep track of this when we are running the script, right? OK. So now we have uh all we need uh uh to store like all the, the training data in our dictionary. Now, the next step and the final step, uh it's that of",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1940s",
        "start_time": "1940.28"
    },
    {
        "id": "a5f9b6db",
        "text": "we, we do a new line and then we say uh processing and we'll pass in uh the semantic label. So here we'll, we'll get like processing blues processing classical. So just like to, to keep track of this when we are running the script, right? OK. So now we have uh all we need uh uh to store like all the, the training data in our dictionary. Now, the next step and the final step, uh it's that of saving",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1953s",
        "start_time": "1953.619"
    },
    {
        "id": "938bf28c",
        "text": "and we'll pass in uh the semantic label. So here we'll, we'll get like processing blues processing classical. So just like to, to keep track of this when we are running the script, right? OK. So now we have uh all we need uh uh to store like all the, the training data in our dictionary. Now, the next step and the final step, uh it's that of saving everything",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1958s",
        "start_time": "1958.969"
    },
    {
        "id": "d1868c14",
        "text": "saving everything as a uh as a Jason file. So, what we'll do here is with, we'll do uh an open and here we'll pass in the Jason path and we'll uh open like this file to, to write basically how to create this file and we'll do an as",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1986s",
        "start_time": "1986.969"
    },
    {
        "id": "0951b1f4",
        "text": "everything as a uh as a Jason file. So, what we'll do here is with, we'll do uh an open and here we'll pass in the Jason path and we'll uh open like this file to, to write basically how to create this file and we'll do an as FP.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1989s",
        "start_time": "1989.089"
    },
    {
        "id": "9c36e104",
        "text": "as a uh as a Jason file. So, what we'll do here is with, we'll do uh an open and here we'll pass in the Jason path and we'll uh open like this file to, to write basically how to create this file and we'll do an as FP. And now",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=1990s",
        "start_time": "1990.64"
    },
    {
        "id": "0f1ba583",
        "text": "FP. And now here, what we want to do is a Jason",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2012s",
        "start_time": "2012.729"
    },
    {
        "id": "5c4ffe7d",
        "text": "And now here, what we want to do is a Jason dots uh dump.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2014s",
        "start_time": "2014.459"
    },
    {
        "id": "908a4a4b",
        "text": "here, what we want to do is a Jason dots uh dump. Now, we don't have Jason here and",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2016s",
        "start_time": "2016.14"
    },
    {
        "id": "378c198f",
        "text": "dots uh dump. Now, we don't have Jason here and we need to import it. So we'll do an import",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2020s",
        "start_time": "2020.4"
    },
    {
        "id": "d974afcc",
        "text": "Now, we don't have Jason here and we need to import it. So we'll do an import Jason there. OK? So we'll do Jason uh uh dot uh dump and then we'll pass in the data. So our dictionary then uh we'll say that we want to like, write the dictionary here like in this file",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2023s",
        "start_time": "2023.77"
    },
    {
        "id": "fc44f644",
        "text": "we need to import it. So we'll do an import Jason there. OK? So we'll do Jason uh uh dot uh dump and then we'll pass in the data. So our dictionary then uh we'll say that we want to like, write the dictionary here like in this file and then we'll pass in a nice um argument which is the indent. So we want to like the do like a, a four indent uh like four edge thing that we are writing to this file so that it becomes like more readable. Nice. So now we have like the whole, the whole function that's I wanna be able like to, to save everything.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2028s",
        "start_time": "2028.369"
    },
    {
        "id": "b8b18762",
        "text": "Jason there. OK? So we'll do Jason uh uh dot uh dump and then we'll pass in the data. So our dictionary then uh we'll say that we want to like, write the dictionary here like in this file and then we'll pass in a nice um argument which is the indent. So we want to like the do like a, a four indent uh like four edge thing that we are writing to this file so that it becomes like more readable. Nice. So now we have like the whole, the whole function that's I wanna be able like to, to save everything. So what remains to do is just that to run it. So we'll do as usual and if name is equal to main,",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2033s",
        "start_time": "2033.969"
    },
    {
        "id": "303847c1",
        "text": "and then we'll pass in a nice um argument which is the indent. So we want to like the do like a, a four indent uh like four edge thing that we are writing to this file so that it becomes like more readable. Nice. So now we have like the whole, the whole function that's I wanna be able like to, to save everything. So what remains to do is just that to run it. So we'll do as usual and if name is equal to main, then we'll do a safe MFCC and then we'll pass in uh the data set path, but not this one, we'll pass in this and we'll pass in the, the Jason path. And now let's say that we're gonna have, I don't know. Yeah, we, we could say like 10 segments, for example. Right?",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2051s",
        "start_time": "2051.52"
    },
    {
        "id": "a6d54b8b",
        "text": "So what remains to do is just that to run it. So we'll do as usual and if name is equal to main, then we'll do a safe MFCC and then we'll pass in uh the data set path, but not this one, we'll pass in this and we'll pass in the, the Jason path. And now let's say that we're gonna have, I don't know. Yeah, we, we could say like 10 segments, for example. Right? Uh OK. So now everything should be in place and now let's see if this works, if there are no mistakes. So, yeah, it's working nice. And so",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2075s",
        "start_time": "2075.239"
    },
    {
        "id": "0f2a0dc9",
        "text": "then we'll do a safe MFCC and then we'll pass in uh the data set path, but not this one, we'll pass in this and we'll pass in the, the Jason path. And now let's say that we're gonna have, I don't know. Yeah, we, we could say like 10 segments, for example. Right? Uh OK. So now everything should be in place and now let's see if this works, if there are no mistakes. So, yeah, it's working nice. And so we basically went through all the different genres. So we processed uh disco and as you can see here, we, we got like this file and we segmented it into uh like 10 different segments. Well, there's a, there's a minor mistake here. So it says segment 01234. Yeah. So to avoid having that and, and starting from one, we do here in the print and S plus one. But for the rest, like it's all good.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2085s",
        "start_time": "2085.638"
    },
    {
        "id": "7b3b0df5",
        "text": "Uh OK. So now everything should be in place and now let's see if this works, if there are no mistakes. So, yeah, it's working nice. And so we basically went through all the different genres. So we processed uh disco and as you can see here, we, we got like this file and we segmented it into uh like 10 different segments. Well, there's a, there's a minor mistake here. So it says segment 01234. Yeah. So to avoid having that and, and starting from one, we do here in the print and S plus one. But for the rest, like it's all good. So as you can see here, so then we are processing reggae rock pop. OK? So now let's take a look at the results of this.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2111s",
        "start_time": "2111.489"
    },
    {
        "id": "e718948d",
        "text": "we basically went through all the different genres. So we processed uh disco and as you can see here, we, we got like this file and we segmented it into uh like 10 different segments. Well, there's a, there's a minor mistake here. So it says segment 01234. Yeah. So to avoid having that and, and starting from one, we do here in the print and S plus one. But for the rest, like it's all good. So as you can see here, so then we are processing reggae rock pop. OK? So now let's take a look at the results of this. So we're doing that. Uh We'll see that here in our current uh working uh directory. Uh We have this data dot Jason, which is like this new file that we've just built and let's take a look at it. Nice.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2128s",
        "start_time": "2128.179"
    },
    {
        "id": "b9e19372",
        "text": "So as you can see here, so then we are processing reggae rock pop. OK? So now let's take a look at the results of this. So we're doing that. Uh We'll see that here in our current uh working uh directory. Uh We have this data dot Jason, which is like this new file that we've just built and let's take a look at it. Nice. OK. So, and as you can see here, we have the mapping and the mapping is given by these guys. So disco, reggae rock and as I said, disco is gonna be equal to zero, reggae equal to one and so on and so forth. Then we have MF CCS and we have like a bunch of values down here. And then uh as you can see down here, we should have like all the labels",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2156s",
        "start_time": "2156.709"
    },
    {
        "id": "d106a276",
        "text": "So we're doing that. Uh We'll see that here in our current uh working uh directory. Uh We have this data dot Jason, which is like this new file that we've just built and let's take a look at it. Nice. OK. So, and as you can see here, we have the mapping and the mapping is given by these guys. So disco, reggae rock and as I said, disco is gonna be equal to zero, reggae equal to one and so on and so forth. Then we have MF CCS and we have like a bunch of values down here. And then uh as you can see down here, we should have like all the labels and the labels are correct because we expect uh 10 zeros, then 10 ones, 10 twos and so on and so forth. Cool. This is great news because now we have our Jason file uh with all the uh all the training data.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2166s",
        "start_time": "2166.61"
    },
    {
        "id": "8cdc0297",
        "text": "OK. So, and as you can see here, we have the mapping and the mapping is given by these guys. So disco, reggae rock and as I said, disco is gonna be equal to zero, reggae equal to one and so on and so forth. Then we have MF CCS and we have like a bunch of values down here. And then uh as you can see down here, we should have like all the labels and the labels are correct because we expect uh 10 zeros, then 10 ones, 10 twos and so on and so forth. Cool. This is great news because now we have our Jason file uh with all the uh all the training data. So next time we are gonna use like this uh training data and we are going to build our network, our music genre classifier and we start with a with an M LP. So a multi perception and then down the line, we",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2184s",
        "start_time": "2184.979"
    },
    {
        "id": "ba3e72a7",
        "text": "and the labels are correct because we expect uh 10 zeros, then 10 ones, 10 twos and so on and so forth. Cool. This is great news because now we have our Jason file uh with all the uh all the training data. So next time we are gonna use like this uh training data and we are going to build our network, our music genre classifier and we start with a with an M LP. So a multi perception and then down the line, we upgrade that to a convolutional neural network. But uh this is it for today. I hope you've enjoyed the video. If that's the case, please remember to subscribe and definitely hit the notification bell. So you'll never miss a video and I'll see you next time. Cheers.",
        "video": "12- Music genre classification: Preparing the dataset",
        "playlist": "Audio Deep Learning with Python",
        "youtube_video_id": "szyGiObZymo",
        "youtube_link": "https://www.youtube.com/watch?v=szyGiObZymo&t=2210s",
        "start_time": "2210.149"
    }
]