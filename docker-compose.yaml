version: '3.8'

services:
  # Streamlit App
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: streamlit
    working_dir: /app
    environment:
      - ES_URL=${ES_URL}
      - ES_INDEX=${ES_INDEX}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATASET_PATH=${DATASET_PATH}
    volumes:
      - ./app:/app
    ports:
      - "${STREAMLIT_PORT:-8501}:8501"
    depends_on:
      - postgres
      - elasticsearch
      - ingestion
  
  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.2
    container_name: elasticsearch
    working_dir: /app
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
    ports:
      - "${ELASTIC_PORT:-9200}:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
  
  # Data ingestion into ElasticSearch
  ingestion:
    image: python:3.12 
    container_name: ingestion
    working_dir: /app
    build:
      context: .
      dockerfile: Dockerfile.ingestion
    volumes:
      - ./app:/app 				                   
    depends_on:
      - elasticsearch  				# waiting for data ingestion
      - postgres				# waiting for tables creation
    environment:
      - ES_URL=${ES_URL}
      - ES_INDEX=${ES_INDEX}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATASET_PATH=${DATASET_PATH}
      - SENTENCE_TRANSFORMERS_MODEL=${SENTENCE_TRANSFORMERS_MODEL}

  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: postgres
    working_dir: /app
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
  
  # PostgreSQL UI - pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD} 
    ports:
      - "8080:80"
    depends_on:
      - postgres

  # Grafana
  grafana:
    image: grafana/grafana:10.0.2
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - postgres

volumes:
  pg_data:
  es_data:
  grafana_data:

